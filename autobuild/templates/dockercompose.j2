version: "3.8"

services:
  snode:
    image: blocknetdx/servicenode:latest
    entrypoint: /opt/blockchain/start-snode.sh
    restart: unless-stopped
    environment:
      PUBLIC_IP: "${PUBLIC_IP}"
      RPC_USER: "${RPC_USER}"
      RPC_PASSWORD: "${RPC_PASSWORD}"
      SN_NAME: "${SN_NAME}"
      SN_ADDRESS: "${SN_ADDRESS}"
      SN_KEY: "${SN_KEY}"
    volumes:
      - {{ snode_config_mount_dir }}/snode/config:/opt/blockchain/config
      - {{ snode_data_mount_dir }}/snode/data:/opt/blockchain/data
      - type: bind
        source: ./scripts
        target: /opt/blockchain
      - type: bind
        source: ./plugins
        target: /opt/blockchain/data/plugins
      - type: bind
        source: ./scripts/config/xbridge.conf
        target: /opt/blockchain/data/xbridge.conf
    ports:
      - "41412:41412"
      - "41414:41414"
    networks:
      - backend

{% for daemon in daemons %}
  {{ daemon.name }}:
    image: {{ daemon.image }}
    restart: unless-stopped
    ports:
      - "{{ daemon.rpcPort }}:{{ daemon.rpcPort }}"
      - "{{ daemon.p2pPort }}:{{ daemon.p2pPort }}"
    volumes:
      - {{ daemon.config_mount_dir }}/{{ daemon.name }}/config:/opt/blockchain/config
      - {{ daemon.data_mount_dir }}/{{ daemon.name }}/data:/opt/blockchain/data
    networks:
      - backend
{% endfor %}

{% if deploy_eth %}
  geth:
    image: ethereum/client-go:latest
    restart: unless-stopped
    ports:
      - "30303:30303"
      - "30303:30303/udp"
      - "8545:8545"
      - "8546:8546"
      - "8547:8547"
    volumes:
      - {{ eth_data_mount_dir }}/ETH:/chaindata
    stop_signal: SIGINT
    stop_grace_period: 2m
    command:
      - --nousb
      - --rpc
      - --http
      - --http.api
      - "eth,net,web3"
      - --http.addr=0.0.0.0
      - --http.vhosts=*
      - --http.corsdomain=*
      - --ws
      - --ws.origins=*
      - --ws.addr=0.0.0.0
      - --ws.api
      - "eth,net,web3"
      - --graphql
      - --graphql.addr=0.0.0.0
      - --graphql.corsdomain=*
      - --graphql.vhosts=*
      - --datadir
      - "/chaindata"
    logging:
      driver: "json-file"
      options:
        max-size: "2m"
        max-file: "10"
    networks:
      - backend

  eth_proxy:
    image: aderks/ethereum-proxy:latest
    restart: unless-stopped
    environment:
      eurl: http://geth:8545
    volumes:
      - ethproxy-config:/opt/app
    ports:
      - "9090:8191"
    networks:
      - backend
{% endif %}

  xr_proxy:
    image: blocknetdx/exrproxy:latest
    entrypoint: /opt/scripts/start-xrproxy.sh
    restart: unless-stopped
    ports: 
      - "80:80"
    environment:
      RPC_USER: "${RPC_USER}"
      RPC_PASSWORD: "${RPC_PASSWORD}"
      SN_KEY: "${SN_KEY}"
    volumes:
      - xrproxy-config:/opt/uwsgi/conf
      - xrproxy-nginx:/etc/nginx
      - type: bind
        source: ./scripts
        target: /opt/scripts
    networks:
      - frontend
      - backend

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
{% if deploy_eth %}
  eth-data:
  ethproxy-config:
{% endif %}
  xrproxy-config:
  xrproxy-nginx:
