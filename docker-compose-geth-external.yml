version: "3.8"
services:
  snode:
    image: blocknetdx/servicenode:latest
    entrypoint: /opt/blockchain/start-snode.sh
    restart: unless-stopped
    environment:
      PUBLIC_IP: "${PUBLIC_IP}"
      RPC_USER: "${RPC_USER}"
      RPC_PASSWORD: "${RPC_PASSWORD}"
      SN_NAME: "${SN_NAME}"
      SN_ADDRESS: "${SN_ADDRESS}"
      SN_KEY: "${SN_KEY}"
    volumes:
      - snode-config:/opt/blockchain/config
      - snode-data:/opt/blockchain/data
      - type: bind
        source: ./scripts
        target: /opt/blockchain
      - type: bind
        source: ./plugins
        target: /opt/blockchain/data/plugins
    ports:
      - "41412:41412"
      - "41414:41414"
    networks:
      backend:
        ipv4_address: 172.31.0.2

  postgresql:
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: eth
      POSTGRES_USER: ethproxy
      POSTGRES_PASSWORD: password
    expose:
      - 5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      backend:
        ipv4_address: 172.31.0.4

  eth_payment_api:
    image: blocknetdx/eth-payment-processor:0.5.1
    restart: unless-stopped
    environment:
      ETH_HOST: "${GETH_HOST}" 
      ETH_PORT: 8546
      PAYMENT_AMOUNT_TIER1: 35
      PAYMENT_AMOUNT_TIER2: 200
      DB_HOST: 172.31.0.4
      DB_USERNAME: ethproxy
      DB_PASSWORD: password
      DB_DATABASE: eth
    expose:
      - 8080
    depends_on:
      - postgresql
    networks:
      backend:
        ipv4_address: 172.31.0.5

  xr_proxy:
    image: blocknetdx/exrproxy:0.7.7
    entrypoint: /opt/scripts/start-xrproxy-gethext.sh
    restart: unless-stopped
    ports:
      - "80:80"
    environment:
      RPC_USER: "${RPC_USER}"
      RPC_PASSWORD: "${RPC_PASSWORD}"
      SN_KEY: "${SN_KEY}"
      GETH_HOST: "${GETH_HOST}"
      PAYMENT_PROCESSOR_HOST: 172.31.0.5:8080
      ETH_HOST: http://${GETH_HOST}:8545
      ETH_HOST_USER:
      ETH_HOST_PASS:
      ETH_HOST_DISALLOWED_METHODS: eth_accounts,db_putString,db_getString,db_putHex,db_getHex
      DB_HOST: 172.31.0.4
      DB_USERNAME: ethproxy
      DB_PASSWORD: password
      DB_DATABASE: eth
    volumes:
      - xrproxy-config:/opt/uwsgi/conf
      - xrproxy-nginx:/etc/nginx
      - type: bind
        source: ./scripts
        target: /opt/scripts
    depends_on:
      - postgresql
    networks:
      frontend:
      backend:
        ipv4_address: 172.31.0.6

networks:
  frontend:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.41.0.0/24
    driver_opts:
      com.docker.network.bridge.enable_icc: "true"
      com.docker.network.bridge.enable_ip_masquerade: "true"
  backend:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.31.0.0/24
    driver_opts:
      com.docker.network.bridge.enable_icc: "true"

volumes:
  snode-config:
  snode-data:
  pgdata:
  xrproxy-config:
  xrproxy-nginx:
  scripts:
