version: "3.8"
services:
  snode:
    image: blocknetdx/servicenode:latest
    command: /bin/sh -c "echo \"$BLOCK_CONFIG\" > /opt/blockchain/config/blocknet.conf; echo \"$SN_CONFIG\" > /opt/blockchain/config/servicenode.conf; blocknetd"
    restart: unless-stopped
    environment:
      BLOCK_CONFIG: |
        datadir=/opt/blockchain/data

        maxmempoolxbridge=128

        port=41412
        rpcport=41414

        listen=1
        server=1
        logtimestamps=1
        logips=1
        servicenode=1
        rpcthreads=8

        rpcuser=${RPC_USER}
        rpcpassword=${RPC_PASSWORD}

        rpcallowip=127.0.0.1
        rpcbind=0.0.0.0
        rpctimeout=30
        rpcclienttimeout=30
      SN_CONFIG: |
        # Service Node config
        # Format: alias tier snodekey address
        #   - alias can be any name, no spaces
        #   - tier can be either SPV or OPEN
        #   - snodekey must be a valid base58 encoded private key
        #   - address must be a valid base58 encoded public key that contains the service node collateral
        # SPV tier requires 5000 BLOCK collateral and an associated BLOCK address and can charge fees for services
        # OPEN tier doesn't require any collateral, can't charge fees, and can only support XCloud plugins
        # Example: dev OPEN 6BeBjrnd4DP5rEvUtxBQVu1DTPXUn6mCY5kPB2DWiy9CwEB2qh1
        # Example: xrouter SPV 6B4VvHTn6BbHM3DRsf6M3Sk3jLbgzm1vp5jNe9ZYZocSyRDx69d Bj2w9gHtGp4FbVdR19tJZ9UHwWQhDXxGCM

        ${SN_NAME} SPV ${SN_KEY} ${SN_ADDRESS}
    volumes:
      - snode-config:/opt/blockchain/config
      - snode-data:/opt/blockchain/data
    ports:
      - "41412"
      - "41414"
    networks:
      - backend

  geth:
    image: ethereum/client-go:latest
    restart: unless-stopped
    ports:
      - "30303:30303"
      - "30303:30303/udp"
      - "8545:8545"
      - "8546:8546"
      - "8547:8547"
    volumes:
      - eth-data:/chaindata
    stop_signal: SIGINT
    stop_grace_period: 2m
    command:
      - --nousb
      - --rpc
      - --http
      - --http.api
      - "eth,net,web3"
      - --http.addr=0.0.0.0
      - --http.vhosts=*
      - --http.corsdomain=*
      - --ws
      - --ws.origins=*
      - --ws.addr=0.0.0.0
      - --ws.api
      - "eth,net,web3"
      - --graphql
      - --graphql.addr=0.0.0.0
      - --graphql.corsdomain=*
      - --graphql.vhosts=*
      - --datadir
      - "/chaindata"
    logging:
      driver: "json-file"
      options:
        max-size: "2m"
        max-file: "10"

  eth_proxy:
    image: aderks/ethereum-proxy:latest
    environment:
      eurl: http://geth:8545
    volumes:
      - ethproxy-config:/opt/app
    ports:
      - "80"
    networks:
      - backend

  xr_proxy:
    image: blocknetdx/exrproxy:latest
    entrypoint: /opt/scripts/start-xrproxy.sh
    restart: unless-stopped
    ports: 
      - "80"
    environment:
      RPC_USER: "${RPC_USER}"
      RPC_PASSWORD: "${RPC_PASSWORD}"
      SN_KEY: "${SN_KEY}"
    volumes:
      - xrproxy-config:/opt/uwsgi/conf
      - xrproxy-nginx:/etc/nginx
      - type: bind
        source: ./scripts
        target: /opt/scripts
    networks:
      - backend

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  snode-config:
  snode-data:
  eth-data:
  ethproxy-config:
  xrproxy-config:
  xrproxy-nginx:
  scripts:
